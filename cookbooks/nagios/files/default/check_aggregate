#!/usr/bin/env ruby

require 'nagios'

Class.new(Nagios::Plugin) do
  def initialize
    super

    @code = 0

    @config.options.on('-s', '--scope=NAME',
      'scope name') { |scope| @scope = scope }
    @config.options.on('-C', '--code=INT',
      'status code') { |code| @code = code }

    @config.parse!
    raise "No scope given" unless @scope
  end

  def warning(m)
    m > threshold(:warning).to_f
  end

  def critical(m)
    m > threshold(:critical).to_f
  end

  def to_s(m)
    "#{(m * 100).round(0)}% affected: #{@not_ok.map(&:host_name)}"
  end

  def measure
    scope = ->(section) { section.include?(@scope) }
    status = Nagios::Status.new("/var/nagios/status.dat", include_ok: true, scope: scope)
    @states = status.items
    @not_ok = status.items.select { |item| item[:current_state] != @code }
    return 0.0 if @states.empty?
    @not_ok.count.to_f / @states.count.to_f
  end
end.run!
